#!/usr/bin/python3

import unittest
import time
import urllib.request
import requests
import signal
import os

class py_django_integration_client_test(unittest.TestCase):
	def test_py_django_client(self):

		print('Client: Waiting for python django server ...');

		time.sleep(3); # Fake reactive behavior

		print('Client: Sending GET request to index');

		request = urllib.request.urlopen('http://127.0.0.1:8080').read();

		print('Client: Request { ' + str(request) + ' }');

		self.assertEqual(request, b'hello world');

		print('Client: Sending POST request to media');

		file_handle = open('${CMAKE_CURRENT_BINARY_DIR}/@TEST_SCRIPT_LAUNCHER_FILE_NAME@');

		files = { 'file': file_handle };

		request = requests.post('http://127.0.0.1:8080/media/', files = files);

		file_handle.close();

		print('Client: Request { ' + str(request) + ' }');

		self.assertEqual(request.content, b'123456');

		print('Client: Killing python django server (${CMAKE_CURRENT_BINARY_DIR}/@TEST_SCRIPT_LAUNCHER_BASE_NAME@)');

		request = urllib.request.urlopen('http://127.0.0.1:8080/pid/').read();

		print('Client: Request { ' + str(request) + ' }');

		os.kill(int(request), signal.SIGINT);

		print('Server: Python django server killed gracefully');

if __name__ == '__main__':
	unittest.main()
