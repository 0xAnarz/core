#!/usr/bin/ruby

ENV['CONFIGURATION_LIBRARY_PATH'] = '@CONFIGURATION_LIBRARY_PATH@'
ENV['CONFIGURATION_PATH'] = '@CONFIGURATION_PATH@'
ENV['LOADER_LIBRARY_PATH'] = '@LOADER_LIBRARY_PATH@'
ENV['LOADER_SCRIPT_PATH'] = '@LOADER_SCRIPT_PATH@'

require 'test/unit'
require_relative '@RB_PORT_NAME@'

class RbPortTest < Test::Unit::TestCase

	@@meta = @RB_PORT_OBJ@.method(:metacall)

	# MetaCall (Python)
	def test_python
		assert_equal(0, @RB_PORT_OBJ@.metacall_load_from_file('py', ['example.py']))

		assert_equal(nil, @@meta.call('hello'))

		#assert_equal(35, @@meta.call('multiply', 5, 7))
	end

	# MetaCall (Ruby)
	def test_ruby
		assert_equal(0, @RB_PORT_OBJ@.metacall_load_from_file('rb', ['hello.rb']))

		assert_equal(nil, @@meta.call('say_null'))
		
		#assert_equal(12, @@meta.call('say_multiply', 3, 4))

		#assert_equal('Hello world!', @@meta.call('say_hello', 'world'))
	end

end
