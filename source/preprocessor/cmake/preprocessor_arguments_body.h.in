/* -- Definitions -- */

#cmakedefine PREPROCESSOR_ARGS_SIZE @PREPROCESSOR_ARGS_SIZE@

/* -- Macros -- */

#define PREPROCESSOR_ARGS_COUNT_SEQ_IMPL() \
	@PREPROCESSOR_ARGS_COUNT_SEQ_IMPL_BODY@0

#define PREPROCESSOR_ARGS_COMMA_SEQ_IMPL() \
	@PREPROCESSOR_ARGS_COMMA_SEQ_IMPL_BODY@0

#define PREPROCESSOR_ARGS_N_IMPL( \
	@PREPROCESSOR_ARGS_N_IMPL_BODY@\
	N, ...) N

#define PREPROCESSOR_ARGS_FIRST(first, ...) first

#define PREPROCESSOR_ARGS_FIRST_REMOVE(first, ...) __VA_ARGS__

#define PREPROCESSOR_ARGS_SECOND(first, second, ...) second

#define PREPROCESSOR_ARGS_SECOND_REMOVE(first, second, ...) first, __VA_ARGS__

#define PREPROCESSOR_ARGS_FIRST_OR_EMPTY_IMPL(...) \
	PREPROCESSOR_IF(PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__), \
		PREPROCESSOR_ARGS_FIRST(__VA_ARGS__, PREPROCESSOR_EMPTY_SYMBOL()), \
		PREPROCESSOR_EMPTY_SYMBOL() \
	)

#define PREPROCESSOR_ARGS_FIRST_OR_EMPTY(...) \
	PREPROCESSOR_IF(PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__), \
		PREPROCESSOR_ARGS_FIRST_OR_EMPTY_IMPL(__VA_ARGS__), \
		PREPROCESSOR_EMPTY_SYMBOL() \
	)

#if defined(__GNUC__)
#	define PREPROCESSOR_ARGS_SECOND_OR_EMPTY_IMPL(...) \
		PREPROCESSOR_IF(PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__), \
			PREPROCESSOR_ARGS_FIRST(__VA_ARGS__), \
			PREPROCESSOR_EMPTY_SYMBOL() \
		)
#	define PREPROCESSOR_ARGS_SECOND_OR_EMPTY(...) \
		PREPROCESSOR_IF(PREPROCESSOR_ARGS_AT_LEAST_TWO(__VA_ARGS__), \
			PREPROCESSOR_ARGS_SECOND_OR_EMPTY_IMPL(PREPROCESSOR_ARGS_FIRST_REMOVE(__VA_ARGS__)), \
			PREPROCESSOR_EMPTY_SYMBOL() \
		)
#	define PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL_I(first, ...) \
		PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__)
#	define PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL(...) \
		PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL_I(__VA_ARGS__)
#	define PREPROCESSOR_ARGS_AT_LEAST_TWO(...) \
		PREPROCESSOR_IF(PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__), \
			PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL(__VA_ARGS__), \
			0 \
		)
#elif defined(_MSC_VER)
#	define PREPROCESSOR_ARGS_SECOND_OR_EMPTY_IMPL(...) \
		PREPROCESSOR_IF(PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__), \
			PREPROCESSOR_ARGS_FIRST(__VA_ARGS__, PREPROCESSOR_EMPTY_SYMBOL()), \
			PREPROCESSOR_EMPTY_SYMBOL() \
		)
#	define PREPROCESSOR_ARGS_SECOND_OR_EMPTY(...) \
		PREPROCESSOR_IF(PREPROCESSOR_ARGS_AT_LEAST_TWO(__VA_ARGS__), \
			PREPROCESSOR_ARGS_SECOND_OR_EMPTY_IMPL( \
				PREPROCESSOR_ARGS_FIRST_REMOVE(__VA_ARGS__, PREPROCESSOR_EMPTY_SYMBOL()) \
			), \
			PREPROCESSOR_EMPTY_SYMBOL() \
		)
#	define PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL_I(first, ...) \
		PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__)
#	define PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL(...) \
		PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL_I(\
			PREPROCESSOR_IF(PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__), \
				__VA_ARGS__, \
				PREPROCESSOR_TUPLE_PREPEND(~, __VA_ARGS__) \
			) \
		)
#	define PREPROCESSOR_ARGS_AT_LEAST_TWO(...) \
		PREPROCESSOR_IF(PREPROCESSOR_ARGS_NOT_EMPTY(__VA_ARGS__), \
			PREPROCESSOR_ARGS_AT_LEAST_TWO_IMPL((__VA_ARGS__)), \
			0 \
		)
#else
#	error "Unkwnown preprocessor implementation for arguments."
#endif

#define PREPROCESSOR_ARGS_NOT_EMPTY_IMPL(...) \
	PREPROCESSOR_ARGS_EMPTY(__VA_ARGS__)

#define PREPROCESSOR_ARGS_NOT_EMPTY(...) \
	PREPROCESSOR_NOT(PREPROCESSOR_ARGS_EMPTY(__VA_ARGS__))

#define PREPROCESSOR_ARGS_EMPTY_CASE_IMPL_0001 ,

#define PREPROCESSOR_ARGS_EMPTY_CASE(_0, _1, _2, _3, _4) \
	_0 ## _1 ## _2 ## _3 ## _4

#define PREPROCESSOR_ARGS_EMPTY_IMPL_I(_0, _1, _2, _3) \
	PREPROCESSOR_ARGS_COMMA(PREPROCESSOR_ARGS_EMPTY_CASE(PREPROCESSOR_ARGS_EMPTY_CASE_IMPL_, _0, _1, _2, _3))

#define PREPROCESSOR_ARGS_EMPTY_IMPL(_0, _1, _2, _3) \
	PREPROCESSOR_ARGS_EMPTY_IMPL_I(_0, _1, _2, _3)

#define PREPROCESSOR_ARGS_EMPTY(...) \
	PREPROCESSOR_ARGS_EMPTY_IMPL( \
		PREPROCESSOR_ARGS_COMMA(__VA_ARGS__), \
		PREPROCESSOR_ARGS_COMMA(PREPROCESSOR_COMMA_VARIDIC __VA_ARGS__), \
		PREPROCESSOR_ARGS_COMMA(__VA_ARGS__ ()), \
		PREPROCESSOR_ARGS_COMMA(PREPROCESSOR_COMMA_VARIDIC __VA_ARGS__ ()) \
	)

#if defined(__GNUC__)
#	define PREPROCESSOR_ARGS_COUNT_IMPL(...) \
		PREPROCESSOR_ARGS_N_IMPL(__VA_ARGS__)
#	define PREPROCESSOR_ARGS_STRINGIFY_EMPTY_IMPL(...) # __VA_ARGS__
#	define PREPROCESSOR_ARGS_STRINGIFY_EMPTY(...) PREPROCESSOR_ARGS_STRINGIFY_EMPTY_IMPL(__VA_ARGS__)
#	define PREPROCESSOR_ARGS_COUNT(...) \
		(PREPROCESSOR_ARGS_COUNT_IMPL(__VA_ARGS__, PREPROCESSOR_ARGS_COUNT_SEQ_IMPL()) - \
		(sizeof(PREPROCESSOR_ARGS_STRINGIFY_EMPTY(__VA_ARGS__)) == 1))
#	define PREPROCESSOR_ARGS_COMMA(...) \
		PREPROCESSOR_ARGS_COUNT_IMPL(__VA_ARGS__, PREPROCESSOR_ARGS_COMMA_SEQ_IMPL())
#elif defined(_MSC_VER)
#	define PREPROCESSOR_ARGS_COUNT_PREFIX__PREPROCESSOR_ARGS_COUNT_POSTFIX @PREPROCESSOR_ARGS_COUNT_PREFIX_POSTFIX_BODY@0
#	define PREPROCESSOR_ARGS_COUNT_IMPL(expr) PREPROCESSOR_ARGS_N_IMPL expr
#	define PREPROCESSOR_ARGS_COUNT(...) \
		PREPROCESSOR_ARGS_COUNT_IMPL((PREPROCESSOR_ARGS_COUNT_PREFIX_ ## __VA_ARGS__ ## _PREPROCESSOR_ARGS_COUNT_POSTFIX, PREPROCESSOR_ARGS_COUNT_SEQ_IMPL()))
#	define PREPROCESSOR_ARGS_COMMA(...) \
		PREPROCESSOR_ARGS_COUNT_IMPL((PREPROCESSOR_ARGS_COUNT_PREFIX_ ## __VA_ARGS__ ## _PREPROCESSOR_ARGS_COUNT_POSTFIX, PREPROCESSOR_ARGS_COMMA_SEQ_IMPL()))
#else
#	error "Unkwnown preprocessor implementation for arguments."
#endif
